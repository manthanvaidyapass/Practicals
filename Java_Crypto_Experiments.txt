
Experiment 1: Count 'H' in "HelloWorld"
---------------------------------------
public class HelloWorldCheck {
    public static void main(String[] args) {
        String input = "HelloWorld";
        int count = 0;

        for (int i = 0; i < input.length(); i++) {
            if (input.charAt(i) == 'H') {
                count++;
            }
        }

        System.out.println("Number of characters starting with 'H': " + count);
    }
}


Experiment 2: Transposition Cipher (Encryption/Decryption)
-----------------------------------------------------------
public class TranspositionCipher {
    public static String encrypt(String text) {
        StringBuilder even = new StringBuilder();
        StringBuilder odd = new StringBuilder();

        for (int i = 0; i < text.length(); i++) {
            if (i % 2 == 0)
                even.append(text.charAt(i));
            else
                odd.append(text.charAt(i));
        }

        return even.toString() + odd.toString();
    }

    public static String decrypt(String text) {
        int mid = text.length() / 2;
        StringBuilder result = new StringBuilder();

        for (int i = 0; i < mid; i++) {
            result.append(text.charAt(i));
            if (mid + i < text.length())
                result.append(text.charAt(mid + i));
        }

        return result.toString();
    }

    public static void main(String[] args) {
        String message = "HELLOWORLD";
        String encrypted = encrypt(message);
        String decrypted = decrypt(encrypted);

        System.out.println("Original: " + message);
        System.out.println("Encrypted: " + encrypted);
        System.out.println("Decrypted: " + decrypted);
    }
}


Experiment 3: DES Algorithm in Java
-----------------------------------
import javax.crypto.Cipher;
import javax.crypto.KeyGenerator;
import javax.crypto.SecretKey;

public class DESExample {
    public static void main(String[] args) throws Exception {
        String message = "HelloDES";

        KeyGenerator keyGen = KeyGenerator.getInstance("DES");
        SecretKey key = keyGen.generateKey();

        Cipher cipher = Cipher.getInstance("DES");

        cipher.init(Cipher.ENCRYPT_MODE, key);
        byte[] encrypted = cipher.doFinal(message.getBytes());
        System.out.println("Encrypted: " + new String(encrypted));

        cipher.init(Cipher.DECRYPT_MODE, key);
        byte[] decrypted = cipher.doFinal(encrypted);
        System.out.println("Decrypted: " + new String(decrypted));
    }
}


Experiment 4 & 5: RSA Algorithm in Java
---------------------------------------
import java.security.*;
import javax.crypto.Cipher;

public class RSAExample {
    public static void main(String[] args) throws Exception {
        KeyPairGenerator keyGen = KeyPairGenerator.getInstance("RSA");
        keyGen.initialize(2048);
        KeyPair pair = keyGen.generateKeyPair();

        PublicKey pubKey = pair.getPublic();
        PrivateKey privKey = pair.getPrivate();

        String text = "HelloRSA";

        Cipher encryptCipher = Cipher.getInstance("RSA");
        encryptCipher.init(Cipher.ENCRYPT_MODE, pubKey);
        byte[] encrypted = encryptCipher.doFinal(text.getBytes());
        System.out.println("Encrypted: " + new String(encrypted));

        Cipher decryptCipher = Cipher.getInstance("RSA");
        decryptCipher.init(Cipher.DECRYPT_MODE, privKey);
        byte[] decrypted = decryptCipher.doFinal(encrypted);
        System.out.println("Decrypted: " + new String(decrypted));
    }
}


Experiment 7: Hello and Key Exchange using HTML & JS
-----------------------------------------------------
<!DOCTYPE html>
<html>
<head>
    <title>Key Exchange</title>
</head>
<body>
    <h1>Hello Key Exchange</h1>
    <button onclick="exchangeKey()">Start Exchange</button>
    <p id="output"></p>

    <script>
        function exchangeKey() {
            const keyA = Math.floor(Math.random() * 100);
            const keyB = Math.floor(Math.random() * 100);
            document.getElementById("output").innerText = 
                "Key from A: " + keyA + "\nKey from B: " + keyB + "\nShared Secret: " + (keyA + keyB);
        }
    </script>
</body>
</html>


Experiment 8: MD5 Hash in Java
------------------------------
import java.security.MessageDigest;

public class MD5Example {
    public static void main(String[] args) throws Exception {
        String message = "HelloMD5";
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] digest = md.digest(message.getBytes());

        StringBuilder hexString = new StringBuilder();
        for (byte b : digest) {
            hexString.append(String.format("%02x", b));
        }

        System.out.println("MD5 Hash: " + hexString.toString());
    }
}
